
[ ] always have a breathing phrase selected
[ ] set the top breathing phrase as the default
this approach is better than having a special case since if we have a special case we would
have to have a button for deselection if the user wanted to restore the special case. For
example, if the user speaks another language than English she may want to change to her own
language, or the user may simply prefer another phrase

[ ] store active breathing in db, alt: use topmost
Q: What about rest action?
? Using "breathing in i know i am breathing in, ..." as default when nothing is chosen?

? change to one button (rather than three?), but also giving the option to exit in a discrete way
in, out, close

if we only have the new notification we could maybe allow no breathing phrase set
(or we could just use a default breathing phrase text)

hovering over the left and right areas in the breathing dialog

checkboxes:
1. please select a rest activity from the list
2. walk mindfully and do the activity
3. when coming back you can choose to breathe with the interface


=========

types of notifications:
space (blocking or not),
how to close (and how "persistent")


Low priority:
[ ] draw a state diagram for the documentation
[ ] if the user only breathes in then the in breath will be removed
[ ] setting the log level when starting the application, using a command line argument
[ ] testing
 * add different test setups (no list items for example)
[ ] show the active breathing phrase in the systray menu
DESIGN: Deciding how to display (latest, top, something else?)
- another option is to show the entry with the surrounding entries (2 above and 2 below for example)
duplicate: [ ] indicate which breathing phrase is active in the sys tray. Please note: This means that we
may also want to include another value here, since the user may not have chosen one of the
top three / five
[ ] color change when the user moves the mouse or types, this is during the short breaks
- it's not possible to detect mouse outside of a widget in a cross-platform way,
but activity can be detected inside of the widget of course, and this is something that we
may (or not) want to use

